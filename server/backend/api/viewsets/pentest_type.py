from drf_spectacular.utils import extend_schema_view, extend_schema
from rest_framework.viewsets import ReadOnlyModelViewSet

from backend.models.pentest_type import PentestType
from backend.api.serializers.pentest_type import PentestTypeSerializer
from pecoret.core.viewsets import PeCoReTModelViewSet
from pecoret.core import permissions


@extend_schema_view(
    list=extend_schema(
        operation_id='Get all pentest types', tags=['Pentest Types']
    ),
    update=extend_schema(
        operation_id='Update a pentest type', tags=['Pentest Types']
    ),
    partial_update=extend_schema(
        operation_id='Partially update a pentest type', tags=['Pentest Types']
    ),
    destroy=extend_schema(
        operation_id='Delete a pentest type', tags=['Pentest Types']
    ),
    create=extend_schema(
        operation_id='Create a new pentest type', tags=['Pentest Types']
    ),
    retrieve=extend_schema(
        operation_id='Retrieve a specific pentest type', tags=['Pentest Types']
    )
)
class PentestTypeViewSet(ReadOnlyModelViewSet):
    permission_classes = [
        permissions.GroupPermission(
            read_write_groups=[],
            read_only_groups=[
                permissions.Groups.GROUP_MANAGEMENT,
                permissions.Groups.GROUP_PENTESTER
            ]
        )
    ]
    api_scope = None
    queryset = PentestType.objects.none()
    search_fields = ["name"]
    serializer_class = PentestTypeSerializer

    def get_queryset(self):
        return PentestType.objects.all()
