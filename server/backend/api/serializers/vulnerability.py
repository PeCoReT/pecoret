from rest_framework import serializers
from backend.models.vulnerability import (
    ProjectVulnerability, VulnerabilityTemplate, Severity,
    VulnerabilityTemplateTranslation
)
from backend.api.serializers.cwe import CWEMinimalSerializer
from pecoret.core.serializers import ValuedChoiceField, PrimaryKeyRelatedField


class BaseVulnerabilitySerializer(serializers.ModelSerializer):
    severity = ValuedChoiceField(choices=Severity.choices)
    cwe = PrimaryKeyRelatedField(serializer=CWEMinimalSerializer)

    class Meta:
        fields = ["severity", "pk", "name", "description", "vulnerability_id", "recommendation", "cwe",
                  'date_created', 'date_updated', "remediation"]


class VulnerabilityTemplateTranslationSerializer(serializers.ModelSerializer):
    class Meta:
        model = VulnerabilityTemplateTranslation
        fields = ['name', 'description', 'recommendation', 'remediation', 'language', 'pk']


class VulnerabilityTemplateTranslationPatchSerializer(serializers.ModelSerializer):
    class Meta:
        model = VulnerabilityTemplateTranslation
        fields = ['name', 'description', 'recommendation', 'remediation', 'pk']


class VulnerabilityTemplateSerializer(BaseVulnerabilitySerializer):
    translations = VulnerabilityTemplateTranslationSerializer(read_only=True, many=True)

    class Meta:
        model = VulnerabilityTemplate
        fields = BaseVulnerabilitySerializer.Meta.fields + ['translations']


class ProjectVulnerabilitySerializer(BaseVulnerabilitySerializer):
    class Meta:
        model = ProjectVulnerability
        fields = BaseVulnerabilitySerializer.Meta.fields
