from rest_framework.test import APITestCase
from backend.models.pentest_type import PentestType
from pecoret.core.test import PeCoReTTestCaseMixin


class PentestTypeListView(APITestCase, PeCoReTTestCaseMixin):
    def setUp(self):
        self.init_mixin()
        self.url = self.get_url("api:backend:pentest-type-list")

    def test_allowed(self):
        users = [self.pentester1, self.pentester2, self.management1, self.management2]
        for user in users:
            self.client.force_login(user)
            self.basic_status_code_check(self.url, self.client.get, 200)

    def test_forbidden(self):
        users = [self.user1]
        for user in users:
            self.client.force_login(user)
            self.basic_status_code_check(self.url, self.client.get, 403)


class PentestTypeCreateView(APITestCase, PeCoReTTestCaseMixin):
    def setUp(self):
        self.init_mixin()
        self.url = self.get_url("api:backend:pentest-type-list")
        self.data = {"name": "PentestTypeTest"}

    def test_allowed(self):
        self.client.force_login(self.superuser)
        self.basic_status_code_check(self.url, self.client.post, 405, data=self.data)

    def test_forbidden(self):
        users = [
            self.pentester1,
            self.pentester2,
            self.management1,
            self.management2,
            self.user1,
        ]
        for user in users:
            self.client.force_login(user)
            self.basic_status_code_check(
                self.url, self.client.post, 403, data=self.data
            )


class PentestTypeDeleteView(APITestCase, PeCoReTTestCaseMixin):
    def setUp(self):
        self.init_mixin()
        self.pentest_type = PentestType.objects.create(name="Web")
        self.url = self.get_url("api:backend:pentest-type-detail", pk=self.pentest_type.pk)

    def test_allowed(self):
        self.client.force_login(self.superuser)
        self.basic_status_code_check(self.url, self.client.delete, 405)

    def test_forbidden(self):
        users = [
            self.pentester1,
            self.pentester2,
            self.management1,
            self.management2,
            self.user1,
        ]
        for user in users:
            self.client.force_login(user)
            self.basic_status_code_check(
                self.url, self.client.delete, 403
            )
