from rest_framework.test import APITestCase
from pecoret.core.test import PeCoReTTestCaseMixin
from backend.models import VulnerabilityTemplate


class VulnerabilityTemplateListView(APITestCase, PeCoReTTestCaseMixin):
    def setUp(self) -> None:
        self.init_mixin()
        self.template1 = self.create_instance(VulnerabilityTemplate)
        self.url = self.get_url("api:backend:vulnerability-template-list")

    def test_allowed(self):
        users = [
            self.pentester2, self.pentester1, self.read_only1,
            self.management1, self.management2
        ]
        for user in users:
            self.client.force_login(user)
            self.basic_status_code_check(self.url, self.client.get, 200)

    def test_forbidden(self):
        users = [
            self.user1
        ]
        for user in users:
            self.client.force_login(user)
            self.basic_status_code_check(self.url, self.client.get, 403)


class VulnerabilityTemplateCreateView(APITestCase, PeCoReTTestCaseMixin):
    pass


class VulnerabilityTemplateUpdateView(APITestCase, PeCoReTTestCaseMixin):
    def setUp(self) -> None:
        self.init_mixin()
        self.template1 = self.create_instance(VulnerabilityTemplate)
        self.url = self.get_url("api:backend:vulnerability-template-detail", pk=self.template1.pk)
        self.data = {}

    def test_forbidden(self):
        users = [
            self.user1, self.management1, self.management2
        ]
        for user in users:
            self.client.force_login(user)
            self.basic_status_code_check(self.url, self.client.post, 403, data=self.data)

    def test_allowed(self):
        users = [
            self.pentester2, self.pentester1, self.read_only1
        ]
        for user in users:
            self.client.force_login(user)
            self.basic_status_code_check(self.url, self.client.patch, 200, data=self.data)


class VulnerabilityTemplateDestroyView(APITestCase, PeCoReTTestCaseMixin):
    def setUp(self) -> None:
        self.init_mixin()
        self.template1 = self.create_instance(VulnerabilityTemplate)
        self.url = self.get_url("api:backend:vulnerability-template-detail", pk=self.template1.pk)

    def test_forbidden(self):
        users = [
            self.user1, self.management2, self.management1
        ]
        for user in users:
            self.client.force_login(user)
            self.basic_status_code_check(self.url, self.client.delete, 403)

    def test_allowed_pentester(self):
        users = [
            self.pentester1
        ]
        for user in users:
            self.client.force_login(user)
            self.basic_status_code_check(self.url, self.client.delete, 204)