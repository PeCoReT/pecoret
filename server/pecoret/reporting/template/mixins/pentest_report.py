from pecoret.reporting import generators
from backend.models import ChangeHistory


class PentestReportMixin:
    """
    implements the single finding export method with finding related context
    """
    pentest_report_sections = []

    def get_pentest_report_sections(self):
        return self.pentest_report_sections.copy()

    def get_pentest_report_context(self, report_document):
        sections = self.get_pentest_report_sections()
        context = self.get_context(**{
            'section_head': 'head.html',
            'sections': sections,
            'project': report_document.report.project,
            'report_document': report_document,
            'version': self._get_report_document_version(report_document)
        })
        return context

    def export_project_pdf_report(self, report_document):
        context = self.get_pentest_report_context(report_document)
        project = report_document.report.project
        generator = generators.PDFReportGenerator(self, context, language=project.language)
        return generator.generate('pentest_report.html')

    def _get_report_document_version(self, report_document):
        qs = ChangeHistory.objects.filter(report=report_document.report)
        if qs.exists():
            return qs.order_by('-version').first()
        return '0.1'
