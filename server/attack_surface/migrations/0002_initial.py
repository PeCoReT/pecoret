# Generated by Django 5.2 on 2025-06-29 13:35

import django.db.models.deletion
import pecoret.core.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("attack_surface", "0001_initial"),
        ("backend", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="finding",
            name="created_by_user",
            field=models.ForeignKey(
                on_delete=pecoret.core.models.CASCADE_USER_TO_GHOST,
                related_name="created_findings",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="finding",
            name="cwe_ids",
            field=models.ManyToManyField(
                blank=True, related_name="as_finding_set", to="backend.cwe"
            ),
        ),
        migrations.AddField(
            model_name="finding",
            name="edited_by_user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="edited_findings",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="finding",
            name="locked_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="locked_items",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="findingcomponent",
            name="finding",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="attack_surface.finding"
            ),
        ),
        migrations.AddField(
            model_name="finding",
            name="program",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="attack_surface.program"
            ),
        ),
        migrations.AddField(
            model_name="scope",
            name="program",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="attack_surface.program"
            ),
        ),
        migrations.AddField(
            model_name="scopeitem",
            name="scope",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="attack_surface.scope"
            ),
        ),
        migrations.AddField(
            model_name="service",
            name="technologies",
            field=models.ManyToManyField(blank=True, to="backend.technology"),
        ),
        migrations.AddField(
            model_name="service",
            name="tags",
            field=models.ManyToManyField(blank=True, to="attack_surface.tag"),
        ),
        migrations.AddField(
            model_name="target",
            name="asn",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="attack_surface.asn",
            ),
        ),
        migrations.AddField(
            model_name="target",
            name="program",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="attack_surface.program"
            ),
        ),
        migrations.AddField(
            model_name="service",
            name="target",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="attack_surface.target"
            ),
        ),
        migrations.AddField(
            model_name="url",
            name="service",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="attack_surface.service"
            ),
        ),
        migrations.AddField(
            model_name="url",
            name="tags",
            field=models.ManyToManyField(blank=True, to="attack_surface.tag"),
        ),
        migrations.AddField(
            model_name="url",
            name="technologies",
            field=models.ManyToManyField(blank=True, to="backend.technology"),
        ),
        migrations.AddField(
            model_name="usersearchquery",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AlterUniqueTogether(
            name="findingcomponent",
            unique_together={("finding", "data")},
        ),
        migrations.AlterUniqueTogether(
            name="scopeitem",
            unique_together={("scope", "value")},
        ),
        migrations.AlterUniqueTogether(
            name="target",
            unique_together={("data", "program")},
        ),
        migrations.AlterUniqueTogether(
            name="service",
            unique_together={("port_number", "target", "protocol")},
        ),
        migrations.AlterUniqueTogether(
            name="url",
            unique_together={("service", "url")},
        ),
        migrations.AlterUniqueTogether(
            name="usersearchquery",
            unique_together={("user", "name")},
        ),
    ]
