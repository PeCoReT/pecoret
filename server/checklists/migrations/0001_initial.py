# Generated by Django 5.2 on 2025-06-29 13:35

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("backend", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_updated", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=128)),
                ("summary", models.CharField(blank=True, max_length=258, null=True)),
                ("category_id", models.CharField(max_length=128, unique=True)),
            ],
            options={
                "verbose_name_plural": "Categories",
                "ordering": ["category_id"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AssetCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_updated", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=128)),
                ("summary", models.CharField(blank=True, max_length=258, null=True)),
                (
                    "category_id",
                    models.CharField(
                        max_length=128,
                        validators=[
                            django.core.validators.RegexValidator("^[\\w\\d_-]*$")
                        ],
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="backend.project",
                    ),
                ),
            ],
            options={
                "unique_together": {("category_id", "project")},
            },
        ),
        migrations.CreateModel(
            name="AssetChecklist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_updated", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=128)),
                ("checklist_id", models.CharField(max_length=128)),
                (
                    "asset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="backend.asset"
                    ),
                ),
                ("categories", models.ManyToManyField(to="checklists.assetcategory")),
                (
                    "project",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="backend.project",
                    ),
                ),
            ],
            options={
                "ordering": ["checklist_id"],
            },
        ),
        migrations.CreateModel(
            name="Checklist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_updated", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=128)),
                (
                    "checklist_id",
                    models.CharField(
                        max_length=128,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(regex="^[\\w\\d_-]*$")
                        ],
                    ),
                ),
                ("categories", models.ManyToManyField(to="checklists.category")),
            ],
            options={
                "ordering": ["checklist_id"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AssetItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_updated", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=128)),
                (
                    "item_id",
                    models.CharField(
                        max_length=128,
                        validators=[
                            django.core.validators.RegexValidator(regex="^[\\w\\d_-]*$")
                        ],
                    ),
                ),
                ("description", models.TextField()),
                (
                    "status",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "Open"), (1, "Closed")], default=0
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="checklists.assetcategory",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="backend.project",
                    ),
                ),
            ],
            options={
                "ordering": ["item_id"],
                "abstract": False,
                "unique_together": {("category", "item_id")},
            },
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_updated", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=128)),
                (
                    "item_id",
                    models.CharField(
                        max_length=128,
                        validators=[
                            django.core.validators.RegexValidator(regex="^[\\w\\d_-]*$")
                        ],
                    ),
                ),
                ("description", models.TextField()),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="checklists.category",
                    ),
                ),
            ],
            options={
                "ordering": ["item_id"],
                "abstract": False,
                "unique_together": {("category", "item_id")},
            },
        ),
    ]
