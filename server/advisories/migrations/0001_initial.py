# Generated by Django 5.2 on 2025-06-29 13:35

import advisories.models.advisory
import advisories.models.share_token
import django.core.validators
import pecoret.core.validators.cvss
import pecoret.reporting.utils
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Advisory",
            fields=[
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_updated", models.DateTimeField(auto_now=True)),
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "advisory_id",
                    models.CharField(
                        default=advisories.models.advisory.create_advisory_id,
                        max_length=64,
                    ),
                ),
                ("date_planned_disclosure", models.DateField()),
                ("date_disclosure", models.DateField(blank=True, null=True)),
                ("title", models.CharField(max_length=128)),
                ("affected_versions", models.CharField(max_length=128)),
                (
                    "fixed_version",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                (
                    "severity",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Informational"),
                            (1, "Low"),
                            (2, "Medium"),
                            (3, "High"),
                            (4, "Critical"),
                        ]
                    ),
                ),
                ("cve_id", models.CharField(blank=True, max_length=20, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("recommendation", models.TextField(blank=True, null=True)),
                (
                    "custom_report_title",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("hide_advisory_id_in_report", models.BooleanField(default=False)),
                ("proof_text", models.TextField(blank=True, default="")),
                (
                    "report_template",
                    models.CharField(
                        choices=pecoret.reporting.utils.get_report_template_choices,
                        max_length=128,
                    ),
                ),
                (
                    "status",
                    models.PositiveSmallIntegerField(
                        choices=[(1, "Not Disclosed"), (2, "Disclosed")], default=1
                    ),
                ),
                (
                    "vulnerability_status",
                    models.PositiveSmallIntegerField(
                        choices=[(1, "Unfixed"), (2, "Fixed"), (3, "Won't Fix")],
                        default=1,
                    ),
                ),
                (
                    "researchers",
                    models.CharField(blank=True, max_length=512, null=True),
                ),
                (
                    "cvss_vector",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        validators=[pecoret.core.validators.cvss.cvss_regex_validator],
                    ),
                ),
            ],
            options={
                "db_table": "backend_advisory",
                "ordering": ["-advisory_id", "date_updated"],
            },
        ),
        migrations.CreateModel(
            name="AdvisoryComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_updated", models.DateTimeField(auto_now=True)),
                ("comment", models.TextField()),
            ],
            options={
                "db_table": "backend_advisorycomment",
                "ordering": ["date_created"],
            },
        ),
        migrations.CreateModel(
            name="AdvisoryTimeline",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("text", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "backend_advisorytimeline",
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="Label",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_updated", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=128, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "color",
                    models.CharField(
                        max_length=7,
                        validators=[
                            django.core.validators.RegexValidator(
                                regex="#([a-fA-F\\d]{6}|[a-fA-F\\d]{3})"
                            )
                        ],
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ShareToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_updated", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                (
                    "token",
                    models.CharField(
                        default=advisories.models.share_token.generate_token,
                        max_length=255,
                        unique=True,
                    ),
                ),
                ("date_expire", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "ordering": ["-date_created"],
            },
        ),
    ]
